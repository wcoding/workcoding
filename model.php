<?php/** *  Список всех статей. *  * @return	array*/function articles_all(){	// Запрос.	$sql = "SELECT * FROM articles ORDER BY id_article DESC";	$result = mysql_query($sql);								if (!$result)		die(mysql_error());		// Извлечение из БД.	$n = mysql_num_rows($result);	$articles = array();	for ($i = 0; $i < $n; $i++)	{		$row = mysql_fetch_assoc($result);				$articles[] = $row;	}		return $articles;}/** *  Конкретная статья. *  * @param	int		$id_article		- идентификатор статьи * @return	mixed	(array || false)*/function article_get($id_article){	$id_article = (int)$id_article;								// Запрос.	$sql = "SELECT * FROM articles WHERE id_article=$id_article";	$result = mysql_query($sql);								if (!$result)		die(mysql_error());		return mysql_fetch_assoc($result);}/** *  Добавить статью. *  * @param	string	$title		- название статьи  * @param	string	$content	- контент статьи * @return	bool*/function article_new($title, $content){	// Подготовка.	$title = trim($title);	$content = trim($content);	// Проверка.	if ($title == '')		return false;		// Запрос.	$sql = "INSERT INTO articles (title, content) VALUES ('%s', '%s')";		$query = sprintf($sql, 	                 mysql_real_escape_string($title),	                 mysql_real_escape_string($content));		$result = mysql_query($query);								if (!$result)		die(mysql_error());			return true;}/** *  Изменить статью. *  * @param	int		$id_article	- идентификатор статьи  * @param	string	$title		- название статьи  * @param	string	$content	- контент статьи * @return	bool*/function article_edit($id_article, $title, $content){	// Подготовка.	$title = trim($title);	$content = trim($content);	// Проверка.	if ($title == '')		return false;		// Запрос.	$sql = "UPDATE articles SET title = '%s', content = '%s' WHERE id_article = %d";		$query = sprintf($sql, 	                 mysql_real_escape_string($title),	                 mysql_real_escape_string($content),					 $id_article);		$result = mysql_query($query);								if (!$result)		die(mysql_error());			return true;}/** *  Удалить статью. *  * @param	int		$id_article	- идентификатор статьи * @return	int					- если больше нуля, то удалил*/function article_delete($id_article){	$id_article = (int)$id_article;								// Запрос.	$sql = "DELETE FROM articles WHERE id_article = $id_article";	$result = mysql_query($sql);								if (!$result)		die(mysql_error());		return mysql_affected_rows();}/** *  Короткое описание статьи. * * @param	array	$article - это ассоциативный массив, представляющий статью * @return	string	*/function article_intro($article){	// убрать html	$str = strip_tags($article['content']);	// если, получившаяся строка больше 200 знаков, обрезать и добавить многоточие	return (mb_strlen($str) > 200) ? mb_substr($str, 0, 200).'..' : $str;}/** *  Отдаёт HTML-шаблон, со вставленными в него данными. * * <?php *  * 	$v_index = get_html( 'v_index.php', array('articles' => $articles) ); *  * 	echo get_html( 'v_base.php', array('content' => $v_index) ); *  * ?> *  * @param	string	$fileName - имя файла, шаблона * @param	array	$vars - массив ['varName' => $value], где ключ это имя переменной в шаблоне * @return	string	*/function get_html($fileName, $vars = array()){	// Установить переменные и их значения, для шаблона.	foreach ($vars as $varName => $value)	{		$$varName = $value;	}		// Не выводить ничего на экран	ob_start();		// Передать в шаблон переменные, 	// которые были установленны	include VIEW.$fileName; 		// Отдать готовый HTML	return ob_get_clean();}